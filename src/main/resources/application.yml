spring:
  application:
    name: aspect-demo
  profiles:
    include: param
server:
    tomcat:
        uri-encoding: UTF-8
    port: 8182
    servlet:
        context-path: /asp-demo
management:
  # 指定监控的HTTP端口（如果不指定，则使用和Server相同的端口）:http://localhost:8183/act/health
  server:
    port: 8183
---
spring:
  # 数据源配置
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/test_job?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT
    username: root
    password: 123456
    driverClassName: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
  # kafka配置
  kafka:
    bootstrap-servers: 192.168.6.63:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: algebra-01
      auto-offset-reset: earliest
      enable-auto-commit: true
      auto-commit-interval: 1000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  # quartz配置
#  quartz:
#    properties:
#      org:
#        quartz:
#          scheduler:
#            instanceName: DefaultQuartzScheduler
#            instanceId: AUTO
#          jobStore:
#            class: org.quartz.impl.jdbcjobstore.JobStoreTX
#            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#            tablePrefix: QRTZ_
#            isClustered: false
#            clusterCheckinInterval: 10000
#            useProperties: true
#          threadPool:
#            class: org.quartz.simpl.SimpleThreadPool
#            threadCount: 10
#            threadPriority: 5
#            threadsInheritContextClassLoaderOfInitializingThread: true
#          dataSource:
#            default:
#              URL: jdbc:mysql://127.0.0.1:3306/test_job?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT
#              user: root
#              password: 123456
#              driver: com.mysql.cj.jdbc.Driver
  activemq:
    broker-url: tcp://49.233.146.198:61616
    user: admin
    password: admin
    pool:
      enabled: false
      max-connections: 50
      idle-timeout: 30000ms
    in-memory: true

  redis:
    # 数据库索引
    database: 0
    host: 192.168.6.62
    port: 6379
    password:
    jedis:
      pool:
        # 连接池最大连接数（负数表示没有限制）
        max-active: 200
        # 连接池最大阻塞等待时间
        max-wait: -1
        # 连接池最大/最小空闲时间
        max-idle: 10
        min-idle: 0
    #链接超时时间
    timeout: 1000

# mybatis
mybatis:
  # 注意通配符的配置
  mapper-locations: classpath*:/mapper/**/**.xml
  # 实体扫描，mybatis 驼峰命名映射
  typeAliasesPackage: com.algebra.aspect.domain
# mapper
mapper:
  mappers: com.algebra.aspect.mapper
  not-empty: false
  identity: MYSQL
# 分页插件
pagehelper:
  helper-dialect: mysql
  #启用合理化，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页
  reasonable: true
  #支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页
  support-methods-arguments: true
  #为了支持startPage(Object params)方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值，
  #可以配置pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值，
  #默认值为pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero
  params: count=sountSql
  #如果 pageSize=0 就会查询出全部的结果（相当于没有执行分页查询）
  page-size-zero: true