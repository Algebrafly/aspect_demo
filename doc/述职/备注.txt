在校：为什么毕业之后选择程序员这行呢？其实，主要与在校期间，
      尤其大二到大三时候，接触过数学建模（经历了校赛--国赛）
     （互联网+出租车调配方案）
      团队合作，我主要是编程解题的，
	  涉及到了一些编程知识，像一些经典数学编程软件R、MATLAB，
	  由此逐渐产生了对编程的兴趣
入门：为什么这么晚才出来找工作，一方面原因（主要）是考研失败
      这次本着找份实习学习的态度去的，实际上也是一家培训公司（中软国际）
      很感谢这段时间的培训，能找到作为一名程序员入门的感觉。
	  （美丽说简单项目：后台管理系统、购物车系统）

第一份工作：经历了一年半，是一家汽车消费信贷公司，叫长安新生金融投资有限公司
      这段时期是我技能快速成长的时期，
	  技能方面：原来只知道，前后端开发都在一个项目底下，是一个单体架构
      逐渐知道了，分布式开发（阿里的Dubbo框架）以及前后端分离的思想。
      包括后来的Nginx反向代理、Mq削峰限流、shiro权限控制、CAS跨域单点登录等
	  业务方面：主要是第三方支付平台和征信平台，最大的工作就是对接银行以及其他各大三方平台的接口
	  （里面涉及了一些安全控制方面的技术）
	  
then: 虽然接触到了很多新技术，但是也深深感知到自己还是停留在技术探索的表面，
      所以接下来依旧会保持着对新技术不断探索求进的态度，
	  努力的学习追赶大牛的脚步	  

单一应用架构
当网站流量很小时，只需一个应用，将所有功能都部署在一起，以减少部署节点和成本。此时，用于简化增删改查工作量的数据访问框架(ORM)是关键。

垂直应用架构
当访问量逐渐增大，单一应用增加机器带来的加速度越来越小，将应用拆成互不相干的几个应用，以提升效率。此时，用于加速前端页面开发的Web框架(MVC)是关键。

分布式服务架构
当垂直应用越来越多，应用之间交互不可避免，将核心业务抽取出来，作为独立的服务，逐渐形成稳定的服务中心，使前端应用能更快速的响应多变的市场需求。此时，用于提高业务复用及整合的分布式服务框架(RPC)是关键。

流动计算架构
当服务越来越多，容量的评估，小服务资源的浪费等问题逐渐显现，此时需增加一个调度中心基于访问压力实时管理集群容量，提高集群利用率。此时，用于提高机器利用率的资源调度和治理中心(SOA)是关键
	  